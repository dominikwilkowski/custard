/***************************************************************************************************************************************************************
 *
 * Testing server
 *
 **************************************************************************************************************************************************************/

'use strict';

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
// Dependencies
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
var Fs = require('fs');
var Http = require('http');
var Chalk = require('chalk');
var Express = require('express');
var Custard = require('../prod/dev.js');
var BodyParser = require('body-parser');


var App = (function Application() {

	return {
		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		// Settings
		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		DEBUG: true, //debugging infos

		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		// Initiate app
		//----------------------------------------------------------------------------------------------------------------------------------------------------------
		init: function Init() {
			var tester = Express();

			//starting server
			tester
				.use( BodyParser.urlencoded({ extended: false }) )
				.listen(1337, function PortListener() {
					console.log('Server started on port 1337');
				});


			tester.get('*', function GetListener(request, response) {
				console.log('Request received!');


				Custard.run([
					{
						'run': App.random.test1,
						'maxCalls': 5, //only run this if there are less than 5 processes currently running
					},{
						'run': App.random.test2,
						'maxCalls': 10, //only run this if there are less than 10 processes currently running
					},{
						'run': App.random.test3, //run this always
					}
				], function() { //run this when we start sacrificing
					console.log('Stuff we can do to report when things start to crack down!');
				});


			});

		},
	}

}());


//run tester
App.init();


/***************************************************************************************************************************************************************
 *
 * Random app lagger
 *
 **************************************************************************************************************************************************************/

(function randomApp(App) {

	var module = {};
	var randInstance = 0; //global counter
	var inProgress = 0;

	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	// test method 1
	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	module.test1 = function randomRun1() {
		console.log('called test1 function');

		setTimeout(function() {
			console.log('queue: ' + Custard.get());
		}, 5000);
	};


	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	// test method 2
	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	module.test2 = function randomRun2() {
		console.log('called test2 function');

		setTimeout(function() {
			console.log('queue: ' + Custard.get());
		}, 6000);
	};

	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	// test method 3
	//------------------------------------------------------------------------------------------------------------------------------------------------------------
	module.test3 = function randomRun3() {
		console.log('called test3 function');

		setTimeout(function() {
			console.log('queue: ' + Custard.get());

			Custard.finished(); //finish on this last test
		}, 10000);
	};


	App.random = module;


}(App));